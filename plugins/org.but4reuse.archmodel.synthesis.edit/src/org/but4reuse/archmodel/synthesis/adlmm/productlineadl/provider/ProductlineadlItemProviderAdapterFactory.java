/**
 */
package org.but4reuse.archmodel.synthesis.adlmm.productlineadl.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.but4reuse.archmodel.synthesis.adlmm.productlineadl.util.ProductlineadlAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ProductlineadlItemProviderAdapterFactory extends ProductlineadlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ProductlineadlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.SoftwareProductLineArchitecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareProductLineArchitectureItemProvider softwareProductLineArchitectureItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.SoftwareProductLineArchitecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareProductLineArchitectureAdapter() {
		if (softwareProductLineArchitectureItemProvider == null) {
			softwareProductLineArchitectureItemProvider = new SoftwareProductLineArchitectureItemProvider(this);
		}

		return softwareProductLineArchitectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Feature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureItemProvider featureItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Feature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureAdapter() {
		if (featureItemProvider == null) {
			featureItemProvider = new FeatureItemProvider(this);
		}

		return featureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Opt} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptItemProvider optItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Opt}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptAdapter() {
		if (optItemProvider == null) {
			optItemProvider = new OptItemProvider(this);
		}

		return optItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.And} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndItemProvider andItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.And}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndAdapter() {
		if (andItemProvider == null) {
			andItemProvider = new AndItemProvider(this);
		}

		return andItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Or} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrItemProvider orItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Or}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrAdapter() {
		if (orItemProvider == null) {
			orItemProvider = new OrItemProvider(this);
		}

		return orItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Xor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XorItemProvider xorItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Xor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXorAdapter() {
		if (xorItemProvider == null) {
			xorItemProvider = new XorItemProvider(this);
		}

		return xorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Require} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequireItemProvider requireItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Require}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequireAdapter() {
		if (requireItemProvider == null) {
			requireItemProvider = new RequireItemProvider(this);
		}

		return requireItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Mutex} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MutexItemProvider mutexItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Mutex}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMutexAdapter() {
		if (mutexItemProvider == null) {
			mutexItemProvider = new MutexItemProvider(this);
		}

		return mutexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.CompositeElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeElementItemProvider compositeElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.CompositeElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeElementAdapter() {
		if (compositeElementItemProvider == null) {
			compositeElementItemProvider = new CompositeElementItemProvider(this);
		}

		return compositeElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.PluginElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PluginElementItemProvider pluginElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.PluginElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPluginElementAdapter() {
		if (pluginElementItemProvider == null) {
			pluginElementItemProvider = new PluginElementItemProvider(this);
		}

		return pluginElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ProvidedInterfaceElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvidedInterfaceElementItemProvider providedInterfaceElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ProvidedInterfaceElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvidedInterfaceElementAdapter() {
		if (providedInterfaceElementItemProvider == null) {
			providedInterfaceElementItemProvider = new ProvidedInterfaceElementItemProvider(this);
		}

		return providedInterfaceElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ConsumedServiceElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConsumedServiceElementItemProvider consumedServiceElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ConsumedServiceElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConsumedServiceElementAdapter() {
		if (consumedServiceElementItemProvider == null) {
			consumedServiceElementItemProvider = new ConsumedServiceElementItemProvider(this);
		}

		return consumedServiceElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExtensionElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionElementItemProvider extensionElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExtensionElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionElementAdapter() {
		if (extensionElementItemProvider == null) {
			extensionElementItemProvider = new ExtensionElementItemProvider(this);
		}

		return extensionElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExtensionPointElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionPointElementItemProvider extensionPointElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExtensionPointElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionPointElementAdapter() {
		if (extensionPointElementItemProvider == null) {
			extensionPointElementItemProvider = new ExtensionPointElementItemProvider(this);
		}

		return extensionPointElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ImportedPackageElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportedPackageElementItemProvider importedPackageElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ImportedPackageElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportedPackageElementAdapter() {
		if (importedPackageElementItemProvider == null) {
			importedPackageElementItemProvider = new ImportedPackageElementItemProvider(this);
		}

		return importedPackageElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.RegisteredServiceElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegisteredServiceElementItemProvider registeredServiceElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.RegisteredServiceElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegisteredServiceElementAdapter() {
		if (registeredServiceElementItemProvider == null) {
			registeredServiceElementItemProvider = new RegisteredServiceElementItemProvider(this);
		}

		return registeredServiceElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.RequiredInterfaceElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredInterfaceElementItemProvider requiredInterfaceElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.RequiredInterfaceElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredInterfaceElementAdapter() {
		if (requiredInterfaceElementItemProvider == null) {
			requiredInterfaceElementItemProvider = new RequiredInterfaceElementItemProvider(this);
		}

		return requiredInterfaceElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExportedPackageElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExportedPackageElementItemProvider exportedPackageElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExportedPackageElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExportedPackageElementAdapter() {
		if (exportedPackageElementItemProvider == null) {
			exportedPackageElementItemProvider = new ExportedPackageElementItemProvider(this);
		}

		return exportedPackageElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExtensionConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionConnectorItemProvider extensionConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ExtensionConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionConnectorAdapter() {
		if (extensionConnectorItemProvider == null) {
			extensionConnectorItemProvider = new ExtensionConnectorItemProvider(this);
		}

		return extensionConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.InterfaceConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceConnectorItemProvider interfaceConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.InterfaceConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceConnectorAdapter() {
		if (interfaceConnectorItemProvider == null) {
			interfaceConnectorItemProvider = new InterfaceConnectorItemProvider(this);
		}

		return interfaceConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ServiceConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceConnectorItemProvider serviceConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.ServiceConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceConnectorAdapter() {
		if (serviceConnectorItemProvider == null) {
			serviceConnectorItemProvider = new ServiceConnectorItemProvider(this);
		}

		return serviceConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.PackageConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageConnectorItemProvider packageConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.PackageConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageConnectorAdapter() {
		if (packageConnectorItemProvider == null) {
			packageConnectorItemProvider = new PackageConnectorItemProvider(this);
		}

		return packageConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Mandatory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MandatoryItemProvider mandatoryItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Mandatory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMandatoryAdapter() {
		if (mandatoryItemProvider == null) {
			mandatoryItemProvider = new MandatoryItemProvider(this);
		}

		return mandatoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Optional} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptionalItemProvider optionalItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Optional}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptionalAdapter() {
		if (optionalItemProvider == null) {
			optionalItemProvider = new OptionalItemProvider(this);
		}

		return optionalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Composition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositionItemProvider compositionItemProvider;

	/**
	 * This creates an adapter for a {@link org.but4reuse.archmodel.synthesis.adlmm.productlineadl.Composition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositionAdapter() {
		if (compositionItemProvider == null) {
			compositionItemProvider = new CompositionItemProvider(this);
		}

		return compositionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (softwareProductLineArchitectureItemProvider != null) softwareProductLineArchitectureItemProvider.dispose();
		if (featureItemProvider != null) featureItemProvider.dispose();
		if (optItemProvider != null) optItemProvider.dispose();
		if (andItemProvider != null) andItemProvider.dispose();
		if (orItemProvider != null) orItemProvider.dispose();
		if (xorItemProvider != null) xorItemProvider.dispose();
		if (requireItemProvider != null) requireItemProvider.dispose();
		if (mutexItemProvider != null) mutexItemProvider.dispose();
		if (compositeElementItemProvider != null) compositeElementItemProvider.dispose();
		if (pluginElementItemProvider != null) pluginElementItemProvider.dispose();
		if (providedInterfaceElementItemProvider != null) providedInterfaceElementItemProvider.dispose();
		if (consumedServiceElementItemProvider != null) consumedServiceElementItemProvider.dispose();
		if (extensionElementItemProvider != null) extensionElementItemProvider.dispose();
		if (extensionPointElementItemProvider != null) extensionPointElementItemProvider.dispose();
		if (importedPackageElementItemProvider != null) importedPackageElementItemProvider.dispose();
		if (registeredServiceElementItemProvider != null) registeredServiceElementItemProvider.dispose();
		if (requiredInterfaceElementItemProvider != null) requiredInterfaceElementItemProvider.dispose();
		if (exportedPackageElementItemProvider != null) exportedPackageElementItemProvider.dispose();
		if (extensionConnectorItemProvider != null) extensionConnectorItemProvider.dispose();
		if (interfaceConnectorItemProvider != null) interfaceConnectorItemProvider.dispose();
		if (serviceConnectorItemProvider != null) serviceConnectorItemProvider.dispose();
		if (packageConnectorItemProvider != null) packageConnectorItemProvider.dispose();
		if (mandatoryItemProvider != null) mandatoryItemProvider.dispose();
		if (optionalItemProvider != null) optionalItemProvider.dispose();
		if (compositionItemProvider != null) compositionItemProvider.dispose();
	}

}
